<?php

namespace backend\modules\covers\controllers;

use common\classes\Debug;
use common\models\db\VkUserGroups;
use common\models\VK;
use CURLFile;
use Yii;
use yii\data\ArrayDataProvider;
use yii\helpers\Url;
use yii\web\Controller;

/**
 * Default controller for the `covers` module
 */
class DefaultController extends Controller
{
    public function beforeAction($action)
    {
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Renders the index view for the module
     * @return string
     * @throws \yii\base\InvalidParamException
     */
    public function actionIndex()
    {
        $vk = new VK([
            'client_id' => '6301353',
            'client_secret' => 'jV9DdZuX0bb6sA6E4X8r',
            'access_token' => '51a45c1161c9e972bc6f891a5b56073c6307301c8eec609b1ba93b1eb8bc0b7db7a44300b2e11db0a1d2b',
        ]);

        //phpinfo();die;

        $photo = Yii::getAlias('@backend/web/cover.png');

        $newPhoto = new \Imagick($photo);
        $draw = new \ImagickDraw();
        $draw->setFontSize(50);
        $draw->annotation(50, 700, "Hello \n World!");
        $newPhoto->drawImage($draw);
        //$newPhoto->writeImage(Yii::getAlias('@backend/web/_cover.png'));
        //$_photo = Yii::getAlias('@backend/web/_cover.png');
        header("Content-Type: image/png");
        echo $newPhoto;

        //$res = $vk->addOwnerCoverPhoto(1502862, $_photo, ['crop_x2' => 3180, 'crop_y2' => 800]);
        //Debug::prn($res);
        //return $this->render('index');
    }

    public function actionGroups()
    {
        $vk = new VK([
            'client_id' => '6301353',
            'client_secret' => 'jV9DdZuX0bb6sA6E4X8r',
            'access_token' => '51a45c1161c9e972bc6f891a5b56073c6307301c8eec609b1ba93b1eb8bc0b7db7a44300b2e11db0a1d2b',
        ]);

        $res = json_decode($vk->getGroups(null, ['filter' => 'admin', 'extended' => 1]), true);

        //Debug::prn($res);

        $dataProvider = new ArrayDataProvider([
            'allModels' => $res['response']['items'],
            'pagination' => [
                'pageSize' => 10,
            ],
            'sort' => [
                'attributes' => ['id', 'name'],
            ],
        ]);

        return $this->render('groups', ['dataProvider' => $dataProvider]);
    }

    public function actionAddGroup($id)
    {
        $vk = new VK([
            'client_id' => '6301353',
            'client_secret' => 'jV9DdZuX0bb6sA6E4X8r',
            'access_token' => '51a45c1161c9e972bc6f891a5b56073c6307301c8eec609b1ba93b1eb8bc0b7db7a44300b2e11db0a1d2b',
        ]);

        $res = json_decode($vk->getGroupInfoByDomain($id, ['fields' => 'members_count,cover']));
        if (isset($res->response)) {
            $info = $res->response[0];
            if (!VkUserGroups::find()->where(['owner_id' => $info->id])->one()) {
                $model = new VkUserGroups();
                $model->attributes = [
                    'user_id' => Yii::$app->user->id,
                    'domain' => $info->screen_name,
                    'name' => $info->name,
                    'owner_id' => $info->id,
                    'photo' => $info->photo_200,
                    'members_count' => $info->members_count,
                    'last_update' => time(),
                ];
                $model->save();
            }
            return $this->redirect(Url::to(['view-group', 'id' => $id]));
        }
        return $this->redirect(Url::to(['groups']));
    }

    public function actionViewGroup($id)
    {
        $model = VkUserGroups::find()->where(['owner_id' => $id])->one();
        return $this->render('view-group', ['model' => $model]);
    }

    public function actionDelGroup($id)
    {
        VkUserGroups::deleteAll(['owner_id' => $id]);
        return $this->redirect(Url::to(['groups']));
    }
}
